{"version":3,"sources":["webpack:///path---docs-packages-serialization-0426bd1947a7c27d7d73.js","webpack:///./.cache/json/docs-packages-serialization.json"],"names":["webpackJsonp","312","module","exports","data","markdownRemark","html","pathContext","relativePath"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,g91BAAwm4BC,aAAgBC,aAAA","file":"path---docs-packages-serialization-0426bd1947a7c27d7d73.js","sourcesContent":["webpackJsonp([83483566802403],{\n\n/***/ 312:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"installation\\\"><a href=\\\"#installation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Installation</h2>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> @brainhubeu/hadron-serialization --save</code></pre>\\n      </div>\\n<p><a href=\\\"/gatsby-docs-kit-starter/docs/basics/core/#installation\\\">More info about installation</a></p>\\n<h2 id=\\\"overview\\\"><a href=\\\"#overview\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overview</h2>\\n<p>The serializer allows you to quickly and easily shape and parse data way you want it. You just need to create a schema (in a json file, or as a simple object) and you are ready to go.</p>\\n<h2 id=\\\"initializing-as-a-hadron-package\\\"><a href=\\\"#initializing-as-a-hadron-package\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Initializing as a Hadron package</h2>\\n<p>Pass the package as an argument for the Hadron bootstrapping function:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// ... importing and initializing other components</span>\\n\\n<span class=\\\"token function\\\">hadron</span><span class=\\\"token punctuation\\\">(</span>expressApp<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'@brainhubeu/hadron-serialization'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> config<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>That way, you should be able to get it from the DI <a href=\\\"http://hadron-docs.dev.brainhub.pl/core/#dependency-injection\\\">container</a> like so:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> serializer <span class=\\\"token operator\\\">=</span> container<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">take</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'serializer'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nserializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addSchema</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">,</span>\\n  properties<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// ...</span>\\n\\n<span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nserializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// or</span>\\n<span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">User</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nserializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"initializing-without-hadron\\\"><a href=\\\"#initializing-without-hadron\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Initializing without Hadron</h2>\\n<p>Just import the <code class=\\\"language-text\\\">serializerProvider</code> function from the package and pass your <a href=\\\"#schema\\\">schemas</a> and parsers there.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> serializerProvider <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'@brainhubeu/hadron-serialization'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> serializer <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">serializerProvider</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  schemas<span class=\\\"token punctuation\\\">:</span> mySchemas<span class=\\\"token punctuation\\\">,</span>\\n  parsers<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    superParser<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Super </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>value<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"configuration\\\"><a href=\\\"#configuration\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Configuration</h2>\\n<p>If you are using Hadron, you just need to add to its config schemas and set parsers:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  serializer<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    schemas<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    parser<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>If you are using TypeScript, you can just implement the exported interface <code class=\\\"language-text\\\">ISerializerConfig</code>:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\">\\n      <pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ISerializerConfig</span> <span class=\\\"token punctuation\\\">{</span>\\n  parsers<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> object<span class=\\\"token punctuation\\\">;</span>\\n  schemas<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> ISerializationSchema<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"usage\\\"><a href=\\\"#usage\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Usage</h2>\\n<p>The serializer contains three methods.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> groups<span class=\\\"token punctuation\\\">,</span> schemaName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li><code class=\\\"language-text\\\">data</code> - object we want to serialize</li>\\n<li><code class=\\\"language-text\\\">groups</code> - optional array of access <a href=\\\"#groups\\\">groups</a>, by default <code class=\\\"language-text\\\">[]</code></li>\\n<li><code class=\\\"language-text\\\">schemaName</code> - name of a schema, by default the name of the passed object</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token function\\\">addSchema</span><span class=\\\"token punctuation\\\">(</span>schemaObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li><code class=\\\"language-text\\\">schemaObj</code> - <a href=\\\"#schema\\\">schema</a> object we want to add</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token function\\\">addParser</span><span class=\\\"token punctuation\\\">(</span>parser<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>Adds a parser that can be used in schemas, where:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">parser</code> is a method</li>\\n<li><code class=\\\"language-text\\\">name</code> is the name under which parser will be available</li>\\n</ul>\\n<h2 id=\\\"schema\\\"><a href=\\\"#schema\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Schema</h2>\\n<p>Schema is a basic structure, that allows you to easily define your desired object. You can provide them as <code class=\\\"language-text\\\">json</code> files, for instance:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"User\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"properties\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"name\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"string\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"address\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"string\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"groups\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"admin\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"money\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"number\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"parsers\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"currency\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"groups\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"admin\\\"</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"friends\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"array\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"properties\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"name\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"string\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"profession\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"string\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"groups\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"admin\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"salary\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"number\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"parsers\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"currency\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Each schema should contain a <code class=\\\"language-text\\\">name</code>, which will be its identifier, and <code class=\\\"language-text\\\">properties</code> which should be an array of fields of the defined schema.</p>\\n<p>All properties that are not defined in the schema, will be excluded from the serialized data result.</p>\\n<p>If you are using TypeScript, you can just implement the exported interface <code class=\\\"language-text\\\">ISerializationSchema</code>:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\">\\n      <pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ISerializationSchema</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  properties<span class=\\\"token punctuation\\\">:</span> IProperty<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"properties\\\"><a href=\\\"#properties\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Properties</h2>\\n<p>Each property contains the following fields:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">name</code> - (required) name of the field</li>\\n<li>\\n<p><code class=\\\"language-text\\\">type</code> - (required) one of the following types:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">string</code></li>\\n<li><code class=\\\"language-text\\\">number</code></li>\\n<li><code class=\\\"language-text\\\">bool</code></li>\\n<li><code class=\\\"language-text\\\">array</code></li>\\n<li><code class=\\\"language-text\\\">object</code></li>\\n</ul>\\n</li>\\n<li><code class=\\\"language-text\\\">groups</code> - array of strings, that will define access to this field (<a href=\\\"#groups\\\">link</a>). If empty, the field will be considered public and will be always returned.</li>\\n<li><code class=\\\"language-text\\\">parsers</code> - array of parsers' names, that should be run on this field before it's returned.</li>\\n<li><code class=\\\"language-text\\\">properties</code> - array of properties, that are required in case of the type <code class=\\\"language-text\\\">object</code> or <code class=\\\"language-text\\\">array</code></li>\\n<li><code class=\\\"language-text\\\">serializedName</code> - name of the field after serialization</li>\\n</ul>\\n<p>If you are using TypeScript, you can just implement the exported interface <code class=\\\"language-text\\\">IProperty</code>:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\">\\n      <pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">IProperty</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">type</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  serializedName<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  groups<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  parsers<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  properties<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> IProperty<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"groups\\\"><a href=\\\"#groups\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Groups</h2>\\n<p>While defining a schema, you can add the <code class=\\\"language-text\\\">groups</code> parameter to properties. That way, while serializing data, you can specify the serialization group.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> schema <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">,</span>\\n  properties<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n    <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'firstname'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'string'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'lastname'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'string'</span><span class=\\\"token punctuation\\\">,</span> groups<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'friends'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nserializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addSchema</span><span class=\\\"token punctuation\\\">(</span>schema<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// ...</span>\\n\\n<span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  firstname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'John'</span><span class=\\\"token punctuation\\\">,</span>\\n  lastname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Doe'</span><span class=\\\"token punctuation\\\">,</span>\\n  id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">481</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>serializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// { 'firstname': 'John' }</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>serializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'friends'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// { 'firstname': 'John', 'lastname': 'Doe' }</span></code></pre>\\n      </div>\"}},\"pathContext\":{\"relativePath\":\"GDK>../docs/packages/serialization.md\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-packages-serialization-0426bd1947a7c27d7d73.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<h2 id=\\\"installation\\\"><a href=\\\"#installation\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Installation</h2>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\">\\n      <pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> @brainhubeu/hadron-serialization --save</code></pre>\\n      </div>\\n<p><a href=\\\"/gatsby-docs-kit-starter/docs/basics/core/#installation\\\">More info about installation</a></p>\\n<h2 id=\\\"overview\\\"><a href=\\\"#overview\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Overview</h2>\\n<p>The serializer allows you to quickly and easily shape and parse data way you want it. You just need to create a schema (in a json file, or as a simple object) and you are ready to go.</p>\\n<h2 id=\\\"initializing-as-a-hadron-package\\\"><a href=\\\"#initializing-as-a-hadron-package\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Initializing as a Hadron package</h2>\\n<p>Pass the package as an argument for the Hadron bootstrapping function:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// ... importing and initializing other components</span>\\n\\n<span class=\\\"token function\\\">hadron</span><span class=\\\"token punctuation\\\">(</span>expressApp<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'@brainhubeu/hadron-serialization'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> config<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>That way, you should be able to get it from the DI <a href=\\\"http://hadron-docs.dev.brainhub.pl/core/#dependency-injection\\\">container</a> like so:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> serializer <span class=\\\"token operator\\\">=</span> container<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">take</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'serializer'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nserializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addSchema</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">,</span>\\n  properties<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// ...</span>\\n\\n<span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nserializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// or</span>\\n<span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">User</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\nserializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"initializing-without-hadron\\\"><a href=\\\"#initializing-without-hadron\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Initializing without Hadron</h2>\\n<p>Just import the <code class=\\\"language-text\\\">serializerProvider</code> function from the package and pass your <a href=\\\"#schema\\\">schemas</a> and parsers there.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> serializerProvider <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'@brainhubeu/hadron-serialization'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> serializer <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">serializerProvider</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  schemas<span class=\\\"token punctuation\\\">:</span> mySchemas<span class=\\\"token punctuation\\\">,</span>\\n  parsers<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    superParser<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Super </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>value<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<h2 id=\\\"configuration\\\"><a href=\\\"#configuration\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Configuration</h2>\\n<p>If you are using Hadron, you just need to add to its config schemas and set parsers:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  serializer<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    schemas<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    parser<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>If you are using TypeScript, you can just implement the exported interface <code class=\\\"language-text\\\">ISerializerConfig</code>:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\">\\n      <pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ISerializerConfig</span> <span class=\\\"token punctuation\\\">{</span>\\n  parsers<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> object<span class=\\\"token punctuation\\\">;</span>\\n  schemas<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> ISerializationSchema<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"usage\\\"><a href=\\\"#usage\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Usage</h2>\\n<p>The serializer contains three methods.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> groups<span class=\\\"token punctuation\\\">,</span> schemaName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li><code class=\\\"language-text\\\">data</code> - object we want to serialize</li>\\n<li><code class=\\\"language-text\\\">groups</code> - optional array of access <a href=\\\"#groups\\\">groups</a>, by default <code class=\\\"language-text\\\">[]</code></li>\\n<li><code class=\\\"language-text\\\">schemaName</code> - name of a schema, by default the name of the passed object</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token function\\\">addSchema</span><span class=\\\"token punctuation\\\">(</span>schemaObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<ul>\\n<li><code class=\\\"language-text\\\">schemaObj</code> - <a href=\\\"#schema\\\">schema</a> object we want to add</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token function\\\">addParser</span><span class=\\\"token punctuation\\\">(</span>parser<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre>\\n      </div>\\n<p>Adds a parser that can be used in schemas, where:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">parser</code> is a method</li>\\n<li><code class=\\\"language-text\\\">name</code> is the name under which parser will be available</li>\\n</ul>\\n<h2 id=\\\"schema\\\"><a href=\\\"#schema\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Schema</h2>\\n<p>Schema is a basic structure, that allows you to easily define your desired object. You can provide them as <code class=\\\"language-text\\\">json</code> files, for instance:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\">\\n      <pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"User\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"properties\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"name\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"string\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"address\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"string\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"groups\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"admin\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"money\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"number\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"parsers\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"currency\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"groups\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"admin\\\"</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"friends\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"array\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token property\\\">\\\"properties\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"name\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"string\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"profession\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"string\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"groups\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"admin\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"salary\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"number\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"parsers\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"currency\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<p>Each schema should contain a <code class=\\\"language-text\\\">name</code>, which will be its identifier, and <code class=\\\"language-text\\\">properties</code> which should be an array of fields of the defined schema.</p>\\n<p>All properties that are not defined in the schema, will be excluded from the serialized data result.</p>\\n<p>If you are using TypeScript, you can just implement the exported interface <code class=\\\"language-text\\\">ISerializationSchema</code>:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\">\\n      <pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ISerializationSchema</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  properties<span class=\\\"token punctuation\\\">:</span> IProperty<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"properties\\\"><a href=\\\"#properties\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Properties</h2>\\n<p>Each property contains the following fields:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">name</code> - (required) name of the field</li>\\n<li>\\n<p><code class=\\\"language-text\\\">type</code> - (required) one of the following types:</p>\\n<ul>\\n<li><code class=\\\"language-text\\\">string</code></li>\\n<li><code class=\\\"language-text\\\">number</code></li>\\n<li><code class=\\\"language-text\\\">bool</code></li>\\n<li><code class=\\\"language-text\\\">array</code></li>\\n<li><code class=\\\"language-text\\\">object</code></li>\\n</ul>\\n</li>\\n<li><code class=\\\"language-text\\\">groups</code> - array of strings, that will define access to this field (<a href=\\\"#groups\\\">link</a>). If empty, the field will be considered public and will be always returned.</li>\\n<li><code class=\\\"language-text\\\">parsers</code> - array of parsers' names, that should be run on this field before it's returned.</li>\\n<li><code class=\\\"language-text\\\">properties</code> - array of properties, that are required in case of the type <code class=\\\"language-text\\\">object</code> or <code class=\\\"language-text\\\">array</code></li>\\n<li><code class=\\\"language-text\\\">serializedName</code> - name of the field after serialization</li>\\n</ul>\\n<p>If you are using TypeScript, you can just implement the exported interface <code class=\\\"language-text\\\">IProperty</code>:</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"typescript\\\">\\n      <pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\"><span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">IProperty</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">type</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  serializedName<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  groups<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  parsers<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  properties<span class=\\\"token operator\\\">?</span><span class=\\\"token punctuation\\\">:</span> IProperty<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre>\\n      </div>\\n<h2 id=\\\"groups\\\"><a href=\\\"#groups\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Groups</h2>\\n<p>While defining a schema, you can add the <code class=\\\"language-text\\\">groups</code> parameter to properties. That way, while serializing data, you can specify the serialization group.</p>\\n<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\">\\n      <pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> schema <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">,</span>\\n  properties<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n    <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'firstname'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'string'</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'lastname'</span><span class=\\\"token punctuation\\\">,</span> type<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'string'</span><span class=\\\"token punctuation\\\">,</span> groups<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'friends'</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nserializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addSchema</span><span class=\\\"token punctuation\\\">(</span>schema<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// ...</span>\\n\\n<span class=\\\"token keyword\\\">const</span> data <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  firstname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'John'</span><span class=\\\"token punctuation\\\">,</span>\\n  lastname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Doe'</span><span class=\\\"token punctuation\\\">,</span>\\n  id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">481</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>serializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// { 'firstname': 'John' }</span>\\n\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>serializer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">serialize</span><span class=\\\"token punctuation\\\">(</span>data<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'friends'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'User'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// { 'firstname': 'John', 'lastname': 'Doe' }</span></code></pre>\\n      </div>\"}},\"pathContext\":{\"relativePath\":\"GDK>../docs/packages/serialization.md\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-packages-serialization.json\n// module id = 312\n// module chunks = 83483566802403"],"sourceRoot":""}